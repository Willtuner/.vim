# 解压缩函数
function extract() {
 local e=0 i c
 for i; do
   if [ -f $i && -r $i ]; then
       c=
       case $i in
         *.tar.bz2) c='tar xjf'    ;;
         *.tar.gz)  c='tar xzf'    ;;
         *.bz2)     c='bunzip2'    ;;
         *.gz)      c='gunzip'     ;;
         *.tar)     c='tar xf'     ;;
         *.tbz2)    c='tar xjf'    ;;
         *.tgz)     c='tar xzf'    ;;
         *.7z)      c='7z x'       ;;
         *.Z)       c='uncompress' ;;
         *.exe)     c='cabextract' ;;
         *.rar)     c='unrar x'    ;;
         *.xz)      c='unxz'       ;;
         *.zip)     c='unzip'      ;;
         *)     echo "$0: cannot extract \`$i': Unrecognized file extension" >&2; e=1 ;;
       esac
       [ $c ] && command $c "$i"
   else
       echo "$0: cannot extract \`$i': File is unreadable" >&2; e=2
   fi
 done
 return $e
}

# replace `rm`,  put files to trash instead of a real delete action
trash() {
    TRASH_DIR="$HOME/.trash"
    if [ ! -d "$TRASH_DIR" ]; then
        mkdir -p "$TRASH_DIR"
    fi
    for i in $*; do
        if [[ ! $i =~ ^- ]]; then
            local filename=`realpath $i`
            if [ -a "$filename" ]; then
                local DT=`date +%Y-%m-%d`
                local p=`dirname "$TRASH_DIR"/"$DT"/"$filename"`
                if [ ! -d "$p" ];then
                    mkdir -p "$p"
                fi
                mv -f "$filename" "$TRASH_DIR/$DT$filename"
            fi
        fi

   done
} 


_env_activate() {
    if [ -d "$1/.env" ]; then
        source "$1/.env/bin/activate"
    elif [ -d "$1/venv" ]; then
        source "$1/venv/bin/activate"
    else
        echo "don't have env"
    fi
}


function aenv() {
    if [ ! "$1" ]; then
        _env_activate "."
    else
        _env_activate "$1"
    fi
}

stat_history() {
  if [ -n $1 ]; then
    __history_limit=$1
  else
    __history_limit=10  
  history |\
  awk '{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]" " CMD[ a ]/count*100 "% " a }' |\
  grep -v "./" | column -c3 -s " " -t |sort -nr | nl | head -n$__history_limit
}





